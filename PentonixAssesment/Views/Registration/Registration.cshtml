@model PentonixAssesment.Models.Registration

@{
    <link href="~/Content/Login.css" rel="stylesheet" />
    ViewBag.Title = "Registration";
}



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
<div class="card-body">
    <div class="form-horizontal center-block mx-100">
        <h4>Registration</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">

            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", placeholder = "Email" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">

            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", placeholder = "First Name" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">

            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", placeholder = "Last Name" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">

            <div class="col-md-10">
                @Html.EditorFor(model => model.PhoneNo, new { htmlAttributes = new { @class = "form-control", placeholder = "Phone Number" } })
                @Html.ValidationMessageFor(model => model.PhoneNo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">

            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", placeholder = "Password" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">



            <div class="col-md-10">
                <div class="subSkill-box">
                    <div class="subSkill-box-wrapper" style="position:relative">
                        <div class="subSkill-box-content flex-row flex-wrap bottom">
                            @{
                                List<SelectListItem> listItems = new List<SelectListItem>();
                                listItems.Add(new SelectListItem
                                {
                                    Text = "Admin",
                                    Value = "Admin"
                                });
                                listItems.Add(new SelectListItem
                                {
                                    Text = "User",
                                    Value = "User",
                                    Selected = true
                                });

                            }
                            @Html.DropDownListFor(model => model.Type, listItems, "-- Select Filetype --", new { @Id = "Type" })

                        </div>
                    </div>
                </div>
                @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="SignUp" class="btn btn-default" />
            </div>
        </div>
    </div>
</div>
        }

        

        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }
